---
title: Configuring OAuth Authentication
owner: Concourse
---

<strong><%= modified_date %></strong>

This topic describes how to configure your team's authentication using OAuth Authentication.

## <a id="overview"></a> Overview
Continuous integration servers often contain many secrets that let them access source code and deploy apps.
It is important that those secrets remain well guarded.
Concourse provides options for both authentication and authorization to give you control over who can access your server and how much they can see.

Any number of the following providers can be enabled at any one time.
Users are given a choice when logging in as to which one they want to use.

<p class="note"><strong>Note:</strong>
If you access your Concourse server over the public internet, then consider using TLS to secure your connection to the web node.
</p>

Configuring team authentication in Concourse is done in two parts:

1. Configure the allowed authentication providers in the deployment manifest.
See [Configure Authentication Providers](#configuring) below.
2. Add users and groups to Concourse teams using `fly set-team`.
See [Add Users and Groups to Teams](#adding) below.

## <a id="configuring"></a> Configure Authentication Providers

<%= partial 'configure-auth-providers' %>

### <a id="config-oauth"></a>  OAuth Authentication
If your authentication provider supports OAuth2 but does not follow the OIDC specification,
then use this provider.
This provider gives you more control over the OIDC provider by letting operators specify the full set of authorization endpoints (`auth-url`, `token-url`).

To add the OAuth provider, do the following:

1. Create the OIDC client.
2. Configure the client.


#### Create the OAuth Client
First, you need to create a client with your OAuth provider.

The callback URL is the external URL of your Concourse server with `/sky/issuer/callback appended`.
For example, Concourse's own CI server's callback URL is `https://ci.concourse-ci.org/sky/issuer/callback`.


#### Configure the Client
To configure the OAuth provider, fill in the `generic_oauth` fields in the `atc` job of the manifest.
For more information about these fields, see [generic_oauth](https://bosh.io/jobs/web?source=github.com/concourse/concourse-bosh-release&version=5.2.0#p%3dgeneric_oauth) in the BOSH documentation.


### <a id="config-main"></a> The Main Team

<%= partial 'main-team' %>


## <a id="adding"></a>Add Users and Groups to Teams

<%= partial 'add-users-and-groups' %>

### <a id="add-oauth"></a> OAuth Users and Groups
Configure users and groups from a generic OAuth provider.

You can only configure groups if the authentication provider exposes this information in either the token itself
or in the contents of the `userinfo` endpoint.
You can configure which claim points to the group's information by specifying the `groups-key` at startup.

* Use `--cf-user=USERNAME` to authorize an individual user.
* Use `--cf-org=ORG-NAME` to authorize an entire org's members.
* Use `--cf-space=ORG_NAME:SPACE-NAME` to authorize the members of a space within an org.

For example:

<pre class="code">
$ fly set-team -n my-team \
    --oauth-user my-username \
    --oauth-group my-group
</pre>


### <a id="team-config"></a> Team Configuration Details

<%= partial 'team-config' %>

The output is similar to the following:
<pre class="terminal">
<strong>name</strong>     <strong>users</strong>          <strong>groups</strong>
main     oauth:User     oauth:Group
</pre>

## <a id="user-roles-and-permissions"></a> Set User Roles and Permissions

<%= partial 'set-user-roles-and-perms' %>
